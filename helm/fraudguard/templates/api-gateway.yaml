{{- if .Values.apiGateway.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: {{ .Values.global.namespace }}
  labels:
    app: api-gateway
    component: api
    tier: frontend
spec:
  replicas: {{ .Values.apiGateway.replicaCount }}
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        component: api
        tier: frontend
    spec:
      containers:
      - name: api-gateway
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.global.imageOwner }}/{{ .Values.apiGateway.image.repository }}:{{ .Values.apiGateway.image.tag }}"
        imagePullPolicy: {{ .Values.apiGateway.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.apiGateway.service.targetPort }}
          name: http
          protocol: TCP
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: {{ .Values.kafka.bootstrapServers | quote }}
        - name: REDIS_HOST
          value: {{ .Values.redis.host | quote }}
        - name: REDIS_PORT
          value: {{ .Values.redis.port | quote }}
        - name: POSTGRES_USER
          value: {{ .Values.postgres.user | quote }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fraudguard-secrets
              key: POSTGRES_PASSWORD
        resources:
          {{- toYaml .Values.apiGateway.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: {{ .Values.apiGateway.probes.liveness.path }}
            port: {{ .Values.apiGateway.service.targetPort }}
          initialDelaySeconds: {{ .Values.apiGateway.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.apiGateway.probes.liveness.periodSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.apiGateway.probes.readiness.path }}
            port: {{ .Values.apiGateway.service.targetPort }}
          initialDelaySeconds: {{ .Values.apiGateway.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.apiGateway.probes.readiness.periodSeconds }}
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: {{ .Values.global.namespace }}
  labels:
    app: api-gateway
spec:
  type: {{ .Values.apiGateway.service.type }}
  ports:
  - port: {{ .Values.apiGateway.service.port }}
    targetPort: {{ .Values.apiGateway.service.targetPort }}
    protocol: TCP
    name: http
  selector:
    app: api-gateway
{{- if .Values.apiGateway.autoscaling.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: {{ .Values.global.namespace }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: {{ .Values.apiGateway.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.apiGateway.autoscaling.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.apiGateway.autoscaling.targetCPUUtilizationPercentage }}
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: {{ .Values.apiGateway.autoscaling.targetMemoryUtilizationPercentage }}
{{- end }}
{{- end }}
