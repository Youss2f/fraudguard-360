---
apiVersion: v1
kind: Namespace
metadata:
  name: fraudguard
  labels:
    name: fraudguard
    environment: production

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fraudguard-config
  namespace: fraudguard
data:
  KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  POSTGRES_HOST: "postgres"
  POSTGRES_DB: "fraudguard"
  NEO4J_URI: "bolt://neo4j:7687"

---
apiVersion: v1
kind: Secret
metadata:
  name: fraudguard-secrets
  namespace: fraudguard
type: Opaque
stringData:
  POSTGRES_USER: "fraudguard_user"
  POSTGRES_PASSWORD: "fraudguard_secure_password_change_in_prod"
  NEO4J_USER: "neo4j"
  NEO4J_PASSWORD: "fraudguard_neo4j_password_change_in_prod"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: fraudguard
  labels:
    app: api-gateway
    component: api
    tier: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        component: api
        tier: frontend
    spec:
      containers:
      - name: api-gateway
        image: ghcr.io/youss2f/fraudguard-api-gateway:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: fraudguard-config
              key: KAFKA_BOOTSTRAP_SERVERS
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: fraudguard-config
              key: REDIS_HOST
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: fraudguard-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fraudguard-secrets
              key: POSTGRES_PASSWORD
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: fraudguard
  labels:
    app: api-gateway
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: api-gateway

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: risk-scoring-service
  namespace: fraudguard
  labels:
    app: risk-scoring-service
    component: processing
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: risk-scoring-service
  template:
    metadata:
      labels:
        app: risk-scoring-service
        component: processing
        tier: backend
    spec:
      containers:
      - name: risk-scoring-service
        image: ghcr.io/youss2f/fraudguard-risk-scoring-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8001
          name: metrics
          protocol: TCP
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: fraudguard-config
              key: KAFKA_BOOTSTRAP_SERVERS
        - name: NEO4J_URI
          valueFrom:
            configMapKeyRef:
              name: fraudguard-config
              key: NEO4J_URI
        - name: NEO4J_USER
          valueFrom:
            secretKeyRef:
              name: fraudguard-secrets
              key: NEO4J_USER
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fraudguard-secrets
              key: NEO4J_PASSWORD
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /metrics
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /metrics
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: risk-scoring-service
  namespace: fraudguard
  labels:
    app: risk-scoring-service
spec:
  type: ClusterIP
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: metrics
  selector:
    app: risk-scoring-service

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-service
  namespace: fraudguard
  labels:
    app: ml-service
    component: ml
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ml-service
  template:
    metadata:
      labels:
        app: ml-service
        component: ml
        tier: backend
    spec:
      containers:
      - name: ml-service
        image: ghcr.io/youss2f/fraudguard-ml-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: NEO4J_URI
          valueFrom:
            configMapKeyRef:
              name: fraudguard-config
              key: NEO4J_URI
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: fraudguard-config
              key: POSTGRES_HOST
        - name: NEO4J_USER
          valueFrom:
            secretKeyRef:
              name: fraudguard-secrets
              key: NEO4J_USER
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fraudguard-secrets
              key: NEO4J_PASSWORD
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: ml-service
  namespace: fraudguard
  labels:
    app: ml-service
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: ml-service

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: fraudguard
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: risk-scoring-hpa
  namespace: fraudguard
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: risk-scoring-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
