# FraudGuard-360 Kubernetes Deployment Manifests
# Production-ready Kubernetes configurations with security, scalability, and monitoring

apiVersion: v1
kind: Namespace
metadata:
  name: fraudguard-360
  labels:
    app.kubernetes.io/name: fraudguard-360
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: kubernetes

---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: fraudguard-config
  namespace: fraudguard-360
data:
  # ML Service Configuration
  ML_MODEL_VERSION: "v1.0.0"
  ML_BATCH_SIZE: "32"
  ML_MAX_INFERENCE_TIME: "100"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # Kafka Configuration  
  KAFKA_BOOTSTRAP_SERVERS: "kafka-service:9092"
  KAFKA_FRAUD_TOPIC: "fraud-detection"
  
  # Database Configuration
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "fraudguard"
  
  # Neo4j Configuration
  NEO4J_HOST: "neo4j-service"
  NEO4J_PORT: "7687"

---
# Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: fraudguard-secrets
  namespace: fraudguard-360
type: Opaque
stringData:
  # Database credentials
  POSTGRES_USER: "fraudguard_user"
  POSTGRES_PASSWORD: "secure_database_password_change_in_production"
  
  # Neo4j credentials
  NEO4J_USER: "neo4j"
  NEO4J_PASSWORD: "secure_neo4j_password_change_in_production"
  
  # JWT Secret
  JWT_SECRET_KEY: "fraudguard360_jwt_secret_key_change_in_production"
  
  # Redis password
  REDIS_PASSWORD: "secure_redis_password_change_in_production"

---
# ML Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-service
  namespace: fraudguard-360
  labels:
    app: ml-service
    version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: ml-service
  template:
    metadata:
      labels:
        app: ml-service
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: ml-service
        image: fraudguard-360/ml-service:1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: fraudguard-config
              key: REDIS_HOST
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fraudguard-secrets
              key: REDIS_PASSWORD
        - name: MODEL_VERSION
          valueFrom:
            configMapKeyRef:
              name: fraudguard-config
              key: ML_MODEL_VERSION
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi" 
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
          readOnly: true
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: ml-models-pvc

---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: fraudguard-360
  labels:
    app: api-gateway
    version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: api-gateway
        image: fraudguard-360/api-gateway:1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fraudguard-secrets
              key: JWT_SECRET_KEY
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: fraudguard-config
              key: REDIS_HOST
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fraudguard-secrets
              key: REDIS_PASSWORD
        - name: ML_SERVICE_URL
          value: "http://ml-service:8000"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5

---
# Services
apiVersion: v1
kind: Service
metadata:
  name: ml-service
  namespace: fraudguard-360
  labels:
    app: ml-service
spec:
  selector:
    app: ml-service
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: fraudguard-360
  labels:
    app: api-gateway
spec:
  selector:
    app: api-gateway
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP

---
# Horizontal Pod Autoscaler for ML Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ml-service-hpa
  namespace: fraudguard-360
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ml-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60

---
# HPA for API Gateway
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: fraudguard-360
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70

---
# Persistent Volume Claim for ML Models
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ml-models-pvc
  namespace: fraudguard-360
spec:
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
# Network Policy for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fraudguard-network-policy
  namespace: fraudguard-360
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: fraudguard-360
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: fraudguard-360
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 443

---
# Ingress for External Access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fraudguard-ingress
  namespace: fraudguard-360
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.fraudguard360.com
    secretName: fraudguard-tls
  rules:
  - host: api.fraudguard360.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 8080

---
# ServiceMonitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: fraudguard-metrics
  namespace: fraudguard-360
  labels:
    app: fraudguard-360
spec:
  selector:
    matchLabels:
      app: ml-service
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: fraudguard-gateway-metrics
  namespace: fraudguard-360
  labels:
    app: fraudguard-360
spec:
  selector:
    matchLabels:
      app: api-gateway
  endpoints:
  - port: http
    path: /metrics
    interval: 30s

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ml-service-pdb
  namespace: fraudguard-360
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: ml-service

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-gateway-pdb
  namespace: fraudguard-360
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: api-gateway