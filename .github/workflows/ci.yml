name: CI & Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ['api-gateway', 'ml-service', 'risk-scoring-service']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with: { python-version: '3.9' }
    - name: Install Dependencies for ${{ matrix.service }}
      run: |
        pip install -r src/${{ matrix.service }}/requirements.txt
        pip install flake8 pytest pytest-cov
    - name: Run Linter (flake8) on ${{ matrix.service }}
      working-directory: src/${{ matrix.service }}
      run: flake8 .
    - name: Run Unit Tests (pytest) for ${{ matrix.service }}
      working-directory: src/${{ matrix.service }}
      run: |
        if [ -d "tests" ] && [ "$(ls -A tests/*.py 2>/dev/null)" ]; then
          pytest tests/ -v --cov=. --cov-report=term-missing
        else
          echo "No tests found for ${{ matrix.service }} - skipping"
        fi

  build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service: ['api-gateway', 'ml-service', 'risk-scoring-service']
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/fraudguard-${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image for ${{ matrix.service }}
      uses: docker/build-push-action@v5
      with:
        context: ./src/${{ matrix.service }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security-audit:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      security-events: write
    steps:
    - uses: actions/checkout@v4
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with: { languages: python }
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
    - name: Run Trivy Vulnerability Scanner on Repository
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        exit-code: '0'
        severity: 'CRITICAL,HIGH'
